import{a as f,S as g,i as u}from"./assets/vendor-b0d10f48.js";(function(){const r=document.createElement("link").relList;if(r&&r.supports&&r.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))t(e);new MutationObserver(e=>{for(const o of e)if(o.type==="childList")for(const a of o.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&t(a)}).observe(document,{childList:!0,subtree:!0});function s(e){const o={};return e.integrity&&(o.integrity=e.integrity),e.referrerPolicy&&(o.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?o.credentials="include":e.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function t(e){if(e.ep)return;e.ep=!0;const o=s(e);fetch(e.href,o)}})();async function p(i,r,s){try{const t=new URLSearchParams({key:"44728966-7765244b057c0982fa05c31d9",q:i,image_type:"photo",orientation:"horizontal",safesearch:"true",per_page:s,page:r});return(await f.get(`https://pixabay.com/api/?${t}`)).data}catch(t){throw console.error("Error fetching images:",t),t}}function c(i,r){const s=i.map(e=>`
        <li class="gallery-item">
            <a class="gallery-link" href="${e.largeImageURL}">
                <div class="full-image">
                    <img class="gallery-image" src="${e.webformatURL}" alt="${e.tags}">
                    <ul class="image-button">
                        <li><p>Likes</p><p>${e.likes}</p></li>
                        <li><p>Views</p><p>${e.views}</p></li>
                        <li><p>Comments</p><p>${e.comments}</p></li>
                        <li><p>Downloads</p><p>${e.downloads}</p></li>
                    </ul>
                </div>
            </a>
        </li>
    `).join("");r.insertAdjacentHTML("beforeend",s),new g(".gallery a",{captionsData:"alt",captionDelay:250}).refresh()}function d(i,r){u[r]({message:i,messageColor:"white",position:"topRight",backgroundColor:"red"})}document.addEventListener("DOMContentLoaded",()=>{const i=document.querySelector("form"),r=document.querySelector(".gallery"),s=document.querySelector(".spinner"),t=document.querySelector(".load-button");let e=1;const o=15;let a="";if(!i||!r||!s||!t){console.error("Required elements are not found in the DOM.");return}t.classList.add("is-hidden"),i.addEventListener("submit",n=>{if(n.preventDefault(),r.innerHTML="",e=1,s.classList.remove("is-hidden"),a=n.target.elements.search_input.value.trim(),a===""){t.classList.add("is-hidden"),d("All form fields must be filled in","warning"),s.classList.add("is-hidden");return}p(a,e,o).then(l=>{if(l.total===0){d("Sorry, there are no images matching your search query. Please try again!","error"),t.classList.add("is-hidden");return}else l.total<=15?(c(l.hits,r),u.error({position:"topRight",message:"We're sorry, there are no more posts to load",messageColor:"white",backgroundColor:"red"})):(t.classList.remove("is-hidden"),c(l.hits,r))}).catch(l=>{console.error("Error fetching images:",l),d("An error occurred while fetching images. Please try again later.","error")}).finally(()=>{n.target.reset(),s.classList.add("is-hidden")})}),t.addEventListener("click",async()=>{try{s.classList.remove("is-hidden"),e+=1;const n=await p(a,e,o);c(n.hits,r);let h=document.querySelector(".full-image").getBoundingClientRect();const m=Math.ceil(n.totalHits/o);e>=m?(t.classList.add("is-hidden"),u.error({position:"topRight",message:"We're sorry, there are no more posts to load",messageColor:"white",backgroundColor:"red"})):window.scrollBy({top:h.height*2,behavior:"smooth"})}catch(n){console.log(n)}finally{s.classList.add("is-hidden")}})});
//# sourceMappingURL=commonHelpers.js.map
