import{a as g,S as f,i as u}from"./assets/vendor-b0d10f48.js";(function(){const s=document.createElement("link").relList;if(s&&s.supports&&s.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))t(e);new MutationObserver(e=>{for(const r of e)if(r.type==="childList")for(const a of r.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&t(a)}).observe(document,{childList:!0,subtree:!0});function o(e){const r={};return e.integrity&&(r.integrity=e.integrity),e.referrerPolicy&&(r.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?r.credentials="include":e.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function t(e){if(e.ep)return;e.ep=!0;const r=o(e);fetch(e.href,r)}})();async function p(i,s,o){try{const t=new URLSearchParams({key:"44728966-7765244b057c0982fa05c31d9",q:i,image_type:"photo",orientation:"horizontal",safesearch:"true",per_page:o,page:s});return(await g.get(`https://pixabay.com/api/?${t}`)).data}catch(t){throw console.error("Error fetching images:",t),t}}function c(i,s){const o=i.map(e=>`
        <li class="gallery-item">
            <a class="gallery-link" href="${e.largeImageURL}">
                <div class="full-image">
                    <img class="gallery-image" src="${e.webformatURL}" alt="${e.tags}">
                    <ul class="image-button">
                        <li><p>Likes</p><p>${e.likes}</p></li>
                        <li><p>Views</p><p>${e.views}</p></li>
                        <li><p>Comments</p><p>${e.comments}</p></li>
                        <li><p>Downloads</p><p>${e.downloads}</p></li>
                    </ul>
                </div>
            </a>
        </li>
    `).join("");s.insertAdjacentHTML("beforeend",o),new f(".gallery a",{captionsData:"alt",captionDelay:250}).refresh()}function d(i,s){u[s]({message:i,messageColor:"white",position:"topRight",backgroundColor:"red"})}document.addEventListener("DOMContentLoaded",()=>{const i=document.querySelector("form"),s=document.querySelector(".gallery"),o=document.querySelector(".spinner"),t=document.querySelector(".load-button");let e=1;const r=15;let a="";t.classList.add("is-hidden"),i.addEventListener("submit",l=>{if(l.preventDefault(),s.innerHTML="",e=1,o.classList.remove("is-hidden"),a=l.target.elements.search_input.value.trim(),a===""){t.classList.add("is-hidden"),d("All form fields must be filled in","warning"),o.classList.add("is-hidden");return}p(a,e,r).then(n=>{if(n.total===0){d("Sorry, there are no images matching your search query. Please try again!","error"),t.classList.add("is-hidden");return}else n.total<=15?(c(n.hits,s),u.error({position:"topRight",message:"We're sorry, there are no more posts to load",messageColor:"white",backgroundColor:"red"})):(t.classList.remove("is-hidden"),c(n.hits,s))}).catch(n=>{console.error("Error fetching images:",n),d("An error occurred while fetching images. Please try again later.","error")}).finally(()=>{l.target.reset(),o.classList.add("is-hidden")})}),t.addEventListener("click",async()=>{try{o.classList.remove("is-hidden"),e+=1;const l=await p(a,e,r);c(l.hits,s);let h=document.querySelector(".full-image").getBoundingClientRect();const m=Math.ceil(l.totalHits/r);e>=m?(t.classList.add("is-hidden"),u.error({position:"topRight",message:"We're sorry, there are no more posts to load",messageColor:"white",backgroundColor:"red"})):window.scrollBy({top:h.height*2,behavior:"smooth"})}catch(l){console.log(l)}finally{o.classList.add("is-hidden")}})});
//# sourceMappingURL=commonHelpers.js.map
